import telebot
import random
from telebot import types
from confing import TELEGRAM_TOKEN
from time import sleep

bot = telebot.TeleBot(TELEGRAM_TOKEN)

VERSION = 1.3
x = 1000
foods = ["üß†–í–∞—Ä–µ–Ω–Ω—ã–π –º–æ–∑–≥", "üéÉ–°—É–ø –∏–∑ —Ç—å–º—ã", "üíÄ–ü–∞—É—á–∏–π –ø–∏—Ä–æ–≥", "ü©∏–ö—Ä–æ–≤–∞–≤—ã–π —Å–º—É–∑–∏", "üéÉ–ü–∏—Ä–æ–∂–æ–∫ —Å —Ç—ã–∫–≤–æ–π"]
coin = ["üëÅ–û—Ä–µ–ª –ø–æ—Ç—É—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π", "ü©∏–†–µ—à–∫–∞ –¥–µ–º–æ–Ω–∞"]
roles = [ "üßô –í–µ–¥—å–º–∞ –∏–∑ —Ç—É–º–∞–Ω–∞",
            "üßõ –í–∞–º–ø–∏—Ä —Å –∫—Ä–∞—Å–Ω—ã–º–∏ –≥–ª–∞–∑–∞–º–∏",
            "üßü‚Äç‚ôÇÔ∏è –ó–æ–º–±–∏, –∏—â—É—â–∏–π –º–æ–∑–≥–∏",
            "üï∏ –ü—Ä–∏–∑—Ä–∞–∫ —Å—Ç–∞—Ä–æ–≥–æ –∑–∞–º–∫–∞",
            "üê∫ –û–±–æ—Ä–æ—Ç–µ–Ω—å –∏–∑ –Ω–æ—á–Ω–æ–≥–æ –ª–µ—Å–∞",
            "üé≠ –¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü"]
treats = ["üç´ –®–æ–∫–æ–ª–∞–¥–∫–∞ —Å –ø—Ä–∏–≤–∏–¥–µ–Ω–∏—è–º–∏",
            "üç≠ –ö–∞—Ä–∞–º–µ–ª—å–Ω—ã–π —á–µ—Ä–µ–ø",
            "üç™ –ü–µ—á–µ–Ω—å–µ —Å –ø–∞—É–∫–∞–º–∏",
            "üç¨ –ö–æ–Ω—Ñ–µ—Ç–∞ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º",
            "üßÉ –ö—Ä–æ–≤–∞–≤—ã–π —Å–æ–∫ (–∫–ª—é–∫–≤–µ–Ω–Ω—ã–π –∫–æ–Ω–µ—á–Ω–æ!)"]
mosters = [ "üëπ –ö—Ä–∏–∫ –±–æ–ª–æ—Ç–Ω–æ–≥–æ —á—É–¥–æ–≤–∏—â–∞",
            "ü¶á –í–∞–º–ø–∏—Ä-–æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ —Å–ª–∞–¥–æ—Å—Ç—è–º–∏",
            "ü™¶ –ü—Ä–∏–∑—Ä–∞–∫ –∫–ª–∞–¥–±–∏—â–∞",
            "üíÄ –°–∫–µ–ª–µ—Ç, —Ç–∞–Ω—Ü—É—é—â–∏–π –≤ —Ç—É–º–∞–Ω–µ",
            "üï∑ –û–≥—Ä–æ–º–Ω—ã–π –ø–∞—É–∫ —Å –∫—Ä–∞—Å–Ω—ã–º–∏ –≥–ª–∞–∑–∞–º–∏"]
challenges = [
            "üéÉ –†–∞—Å—Å–∫–∞–∂–∏ —Å—Ç—Ä–∞—à–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é!",
            "üíÄ –°–¥–µ–ª–∞–π —Ñ–æ—Ç–æ –≤ —Ç–µ–º–Ω–æ—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å –¥—Ä—É–≥—É",
            "üßü‚Äç‚ôÄÔ∏è –ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å –∑–æ–º–±–∏ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥",
            "üï∏Ô∏è –°–∫–∞–∂–∏ '–ë—É!' –∫–æ–º—É-–Ω–∏–±—É–¥—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ",
            "ü¶á –ü—Ä–∏–¥—É–º–∞–π —Å–µ–±–µ —Å—Ç—Ä–∞—à–Ω–æ–µ –∏–º—è"
        ]
spooky_phrases = ["üïØ –ü—Ä–∏–∑—ã–≤–∞—é –¥—É—Ö–æ–≤...",
        "üåë –¢—å–º–∞ —Å–≥—É—â–∞–µ—Ç—Å—è...",
        "üï∏ –ß—Ç–æ-—Ç–æ –¥–≤–∏–∂–µ—Ç—Å—è –≤ —Ç–µ–º–Ω–æ—Ç–µ...",
        "üíÄ –®–µ–ø–æ—Ç –∏–∑ —Ç–µ–º–Ω–æ—Ç—ã...",
        "ü¶á –ù–æ—á—å –ø—Ä–æ–±—É–∂–¥–∞–µ—Ç –º–æ–Ω—Å—Ç—Ä–æ–≤..."
    ]


def complate_play(message):
    msg = bot.send_message(message.chat.id, random.choice(spooky_phrases))
    sleep(1)
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("üé≤–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ", callback_data='btn1')
    btn2 = types.InlineKeyboardButton("üçî–†–∞–Ω–¥–æ–º–Ω–∞—è –µ–¥–∞", callback_data='btn2')
    btn3 = types.InlineKeyboardButton("ü™ô–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞", callback_data='btn3')
    who = types.InlineKeyboardButton("üßõ‚Äç‚ôÇÔ∏è–ö—Ç–æ —Ç—ã –Ω–∞ –•—É–ª–ª–æ—É–∏–Ω?", callback_data="who")
    treat = types.InlineKeyboardButton("üç¨–£–≥–æ—â–µ–Ω–∏–µ –∏–ª–∏ –∂–∏–∑–Ω—å", callback_data="treat")
    monster = types.InlineKeyboardButton("üëª–ú–æ–Ω—Å—Ç—Ä –¥–Ω—è",callback_data="monster")
    challenge = types.InlineKeyboardButton("üé≤–ò—Å–ø—ã—Ç–∞–Ω–∏–µ",callback_data="challenge")
    markup.add(btn1, btn2, btn3, who, treat, monster, challenge)
    bot.edit_message_text(chat_id=message.chat.id, message_id=msg.message_id, text="üéÉ *–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!* üéÉ\n\n"
            "–í—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å, —Å–º–µ—Ä—Ç–Ω—ã–π!\n\n"
            "üëá *–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â—É—é –∏–≥—Ä—É –∏–ª–∏ —Ä–∏—Å–∫–Ω–∏ –≤—ã–∑–≤–∞—Ç—å –¥—É—Ö–æ–≤ —Å–Ω–æ–≤–∞...* üëá",parse_mode='Markdown',
        reply_markup=markup)

@bot.message_handler(commands=['start'])
def start(message):
    msg = bot.send_message(message.chat.id, 'OpenbotAI')
    sleep(1)
    bot.edit_message_text(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name} \n–Ø –±–æ—Ç —Ä–∞–Ω–¥–æ–º–∞ –ø—Ä–æ–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /random —á—Ç–æ–±—ã –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—ã.', message_id=msg.message_id, chat_id=message.chat.id)

#-----------------–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 1.3----------------------
@bot.message_handler(commands=['halloween'])
def halloween_bot(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    who = types.InlineKeyboardButton("üßõüèª‚Äç‚ôÄÔ∏è–ö—Ç–æ —Ç—ã –Ω–∞ –•—É–ª–ª–æ—É–∏–Ω?", callback_data="who")
    treat = types.InlineKeyboardButton("üç¨–£–≥–æ—â–µ–Ω–∏–µ –∏–ª–∏ –∂–∏–∑–Ω—å", calback_data="treat")
    monster = types.InlineKeyboardButton("üëª–ú–æ–Ω—Å—Ç—Ä –¥–Ω—è", callback_data="monster")
    challenge = types.InlineKeyboardButton("üé≤–ò—Å–ø—ã—Ç–∞–Ω–∏–µ", callback_data="challenge")
    markup.add(who, treat, monster, challenge)
    bot.send_message(message.chat.id, "üéÉ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *Halloween Random!*", reply_markup=markup, parse_mode="Markdown")
    

# ---------------- –ú–µ–Ω—é —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö –∏–≥—Ä ----------------
@bot.message_handler(commands=['random'])
def random_menu(message):
    msg = bot.send_message(message.chat.id, '–ó–∞–≥—Ä—É–∑–∫–∞...')
    sleep(1)
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("üé≤–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ", callback_data='btn1')
    btn2 = types.InlineKeyboardButton("üçî–†–∞–Ω–¥–æ–º–Ω–∞—è –µ–¥–∞", callback_data='btn2')
    btn3 = types.InlineKeyboardButton("ü™ô–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞", callback_data='btn3')
    markup.add(btn1, btn2, btn3)
    bot.edit_message_text('–ú–µ–Ω—é –∏–≥—Ä –æ—Ç–∫—Ä—ã—Ç–æ!', reply_markup=markup, message_id=msg.message_id, chat_id=message.chat.id)

@bot.callback_query_handler(func=lambda m: True)
def  callback_data(call):
    if call.data == 'btn1':
        msg = bot.send_message(call.message.chat.id, '–ì–µ–Ω–µ—Ä–∏—Ä—É—é...')
        sleep(1)
        number = random.randint(1, 666)
        bot.edit_message_text(f"–¢–≤–æ–µ —á–∏—Å–ª–æ: {number}", message_id=msg.message_id, chat_id=call.message.chat.id)
        sleep(1)
        bot.answer_callback_query(call.id)
        complate_play(call.message)

    elif call.data == 'btn2': 
        food = random.choice(foods)
        bot.send_message(call.message.chat.id, f'–¢–µ–±–µ –≤—ã–ø–æ–¥–∞–µ—Ç: {food}')
        sleep(1)
        bot.answer_callback_query(call.id)
        complate_play(call.message)


    elif call.data == 'btn3':
        orel = random.choice(coin)
        bot.send_message(call.message.chat.id, f'–¢–µ–±–µ –≤—ã–ø–æ–¥–∞–µ—Ç: {orel}')
        sleep(1)
        bot.answer_callback_query(call.id)
        complate_play(call.message)


#-------------–•–µ–ª—É–∏–Ω------------
    elif call.data == 'who':
        relust = random.choice(roles)
        bot.send_message(call.message.chat.id, f'–ù–∞ –•—ç–ª–ª–æ—É–∏–Ω —Ç—ã - {relust}')
        sleep(1)
        bot.answer_callback_query(call.id)
        complate_play(call.message)

    elif call.data == 'treat':
        relust = random.choice(treats)
        bot.send_message(call.message.chat.id, f'–¢–µ–±–µ –¥–æ—Å—Ç–∞–ª–æ—Å—å: {relust}')
        sleep(1)
        bot.answer_callback_query(call.id)
        complate_play(call.message)

    elif call.data == 'monster':
        relust = random.choice(mosters)
        bot.send_message(call.message.chat.id, f'–°–µ–≥–æ–¥–Ω—è —Ç–µ–±—è –ø—Ä–µ—Å–ª–µ–¥—É–µ—Ç: {relust}')
        sleep(1)
        bot.answer_callback_query(call.id)
        complate_play(call.message)
  
    elif call.data == 'challenge':
        relust = random.choice(challenges)
        bot.send_message(call.message.chat.id, f'–¢–≤–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ: {relust}')
        sleep(1)
        bot.answer_callback_query(call.id)
        complate_play(call.message)

@bot.message_handler(commands=['help'])
def info(message):
    bot.send_message(message.chat.id, '–í –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–º–∞–Ω–¥—ã /start, /info, /help, /random, /random, /random_orel, random_food, /random_number')
    
@bot.message_handler(commands=['info'])
def info_user(message):
    bot.send_message(message.chat.id, f'–ë–æ—Ç c–¥–µ–ª–∞–Ω –∫–æ–º–∞–Ω–∏—è–º–∏: OpenbotAI –∏ VECTORBOT \n–ù–æ –±–æ–ª—å—à—É—é —á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –∫–æ–º–∞–Ω–∏—è: OpenbotAI \n–ß—Ç–æ –µ—Å—Ç—å –ø—Ä–∏–∫–æ–ª—å–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥–∞ /credit \n–í–µ—Ä—Å–∏—è –±–æ—Ç–∞: {VERSION}')

# ---------------- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ----------------
print('–†–∞–Ω–¥–æ–º –±–æ—Ç –∑–∞–ø—É—à–µ–Ω!')
bot.polling(none_stop=True)